# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  #pull_request:
  #  branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
      - name: Checkmarx CxFlow Action
        # You may pin to the exact commit or the version.
        # uses: checkmarx-ts/checkmarx-cxflow-github-action@9975af7d6b957abec9ee9646effa3fb3b82c5314
        uses: checkmarx-ts/checkmarx-cxflow-github-action@v1.4
        with:
          # Provide Checkmarx URL
          checkmarx_url: http://ff79-3-83-175-182.ngrok.io 
          # Select a Checkmarx Team
          team: /CxServer
          # Provide Checkmarx Username
          checkmarx_username: admin 
          # Provide Checkmarx Password
          checkmarx_password: KsHPJ8JCD5otOLixmMov_ 
          # Provide Checkmarx Client Secret
          checkmarx_client_secret: 014DF517-39D1-4453-B7B3-9930C563627C
          # Select a Checkmarx Project
          project: lgv_cxflow_ghissues 
          # Select an Application Name used by downstream bug tracker systems
          app: ${{ GITHUB.REPOSITORY }}
          # Select a Checkmarx Preset
          preset: 'Checkmarx Default'
          # Break build based on Checkmarx findings?
          break_build: false
          # Bug tracker for the scan results.
          bug_tracker: GitHub
          # Incremental Scans?
          incremental: false
          # Additional CLI parameters
          params: --branch=main
                  --repo-name=${{ github.event.repository.name }}
                  --merge-id=${{ github.event.number }}
                  --namespace=${{ github.repository_owner }}
                  --cx-flow.filter-severity
          #params: --namespace=${{ github.repository_owner }} --repo-name=${{ github.event.repository.name }} --branch=${{ github.ref }} --cx-flow.filterSeverity=Medium,Low --cx-flow.filterCategory

          # GitHub API Token
          github_token: ${{secrets.GITHUB_TOKEN}}
          # Vulnerability Scanners (sast, sca, cxgo)
          scanners: sast,sca
          # SCA
          sca_api_url: https://api.scacheckmarx.com
          sca_app_url: https://sca.scacheckmarx.com
          sca_access_control_url: https://platform.checkmarx.net
          sca_tenant: ps-team-emea
          sca_username: Luis.GarciaViejo@checkmarx.com
          sca_password: CxPass123!

